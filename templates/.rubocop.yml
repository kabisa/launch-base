# https://rubocop.readthedocs.io/
AllCops:
  Include:
    - '**/Gemfile'
    - '**/Rakefile'
    - config.ru
     - '**/*.gemspec'
  Exclude:
    - db/schema.rb

# Longer line length
Metrics/LineLength:
  Max: 120

Metrics/ClassLength:
  Max: 150
  CountComments: false

# Methods can be 15 lines long
Metrics/MethodLength:
  Max: 15

# Prefer raise over fail
Style/SignalException:
  EnforcedStyle: only_raise

# Make literal hashes act like arrays
Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: space

Layout/MultilineMethodCallIndentation:
  Enabled: true
  EnforcedStyle: indented_relative_to_receiver

# Disable the documentation requirement
Style/Documentation:
  Enabled: false

# Allow the usage of begin blocks
Style/BeginBlock:
  Enabled: false

# Allow usage of regular array notation, which is familiar to non rubyists as well
Style/WordArray:
  Enabled: true
  EnforcedStyle: brackets

Style/SymbolArray:
  Enabled: true
  EnforcedStyle: brackets

# Enforce nested module/class notation.
# Note: We decided this may be disabled for controllers, add an rubocop file in the controller folder, that inherits from this file and disable the rule if preferred
Style/ClassAndModuleChildren:
  Enabled: true

# Disable check for emptymethod. It would enforce semicolons otherwise, and we are allergic to those
Style/EmptyMethod:
  Enabled: false

# Force Ruby 1.9 syntax and do not mix key types
Style/HashSyntax:
  EnforcedStyle: ruby19_no_mixed_keys

# Array indentation has to be consistent, but it is more flexible
Layout/IndentArray:
  EnforcedStyle: consistent

# Hash indentation has to be consistent, but it is more flexible
Layout/IndentHash:
  EnforcedStyle: consistent

# Use rails indentation
Layout/IndentationConsistency:
  EnforcedStyle: normal

# Do not trail do end blocks with extra function calls
Style/MethodCalledOnDoEndBlock:
  Enabled: true

# Do not enforce the use of `next if <condition>` instead of `unless <condition> ... end`
Style/Next:
  Enabled: false

# Do not enforce the use of modifiers over conditionals when they would fit on one line
Style/IfUnlessModifier:
  Enabled: false

# Complex inline ifs need ()
Style/TernaryParentheses:
  EnforcedStyle: require_parentheses_when_complex

Style/StringLiterals:
  EnforcedStyle: single_quotes
  # Use consistent quotes when multi-lining strings
  ConsistentQuotesInMultiline: true

Style/FrozenStringLiteralComment:
  Enabled: false

# Allow usage :"symbol"
Style/SymbolLiteral:
  Enabled: false

# We usually only flatten only level so we can enable this feature
Performance/FlatMap:
  EnabledForFlattenWithoutParams: true

# Force strict date getting to it handles better with activerecord dates
Rails/Date:
  EnforcedStyle: strict

# Rails 5 cop
Rails/HttpPositionalArguments:
  Enabled: false

# No need to sort gems in the bundle file
Bundler/OrderedGems:
  Enabled: false

# Don't check on block length in spec files.
# `describe` and `context` blocks can be large.
Metrics/BlockLength:
  Exclude:
    - 'spec/**/*_spec.rb'

Security/Eval:
  Exclude:
    - 'spec/*.rb'
    - 'spec/**/*.rb'

# Do not suggest to rename `has_x?` to `x?`
Naming:
  Enabled: false

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented_relative_to_receiver
