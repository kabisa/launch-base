describe 'App Generator' do
  it 'uses custom Gemfile' do
    expect_file_contents 'Gemfile', /gem 'rails', '5.2.0'/
  end

  it 'sets the correct ruby version in the .ruby-version file' do
    expect_file_contents '.ruby-version', /^#{LaunchBase::RUBY_VERSION}$/
  end

  it 'generates a database.yml configured for PostgreSQL usage' do
    expect_file_contents 'config/database.yml', /adapter: postgresql/
  end

  it 'generates a .rspec file' do
    expect_file_contents '.rspec', /--format Fuubar/
  end

  ['factories', 'features', 'fixtures', 'models', 'requests', 'support'].each do |spec_sub_directory_name|
    it "generates a spec/#{spec_sub_directory_name} directory" do
      expect_dir_exists("spec/#{spec_sub_directory_name}")
    end
  end

  it 'removes the test/ directory' do
    expect_dir_exists_not 'test'
  end

  it 'adds a ping spec' do
    expect_file_contents 'spec/requests/ping_spec.rb', "describe '/ping'"
  end

  it 'adds a /ping route' do
    expect_file_contents 'config/routes.rb', "get '/ping'"
  end

  it 'migrates the database' do
    expect_file_exists 'db/schema.rb'
  end

  it 'creates a README.md file' do
    readme_file = File.read("#{project_path}/README.md")

    expect(readme_file).to match /Rails app generated by Kabisa LaunchBase/i
  end

  it 'adds a homepage controller' do
    expect_file_contents 'app/controllers/homepage_controller.rb', 'class HomepageController'
  end

  it 'adds a homepage view' do
    expect_file_contents 'app/views/homepage/show.html.erb', 'Rails app generated by Kabisa LaunchBase'
  end

  it 'adds a homepage route' do
    expect_file_contents 'config/routes.rb', "root to: 'homepage#show'"
  end

  it 'adds capybara configuration' do
    expect_file_contents 'spec/support/capybara.rb', 'Capybara.register_driver :selenium_chrome_headless'
  end

  it 'adds database cleaner configuration' do
    expect_file_contents 'spec/support/database_cleaner.rb', 'DatabaseCleaner.clean_with :truncation'
  end

  it 'adds a module for feature spec helpers' do
    expect_file_contents 'spec/support/feature_spec_helpers.rb', 'module FeatureSpecHelpers'
  end

  it 'adds a module for general spec helpers' do
    expect_file_contents 'spec/support/spec_helpers.rb', 'module SpecHelpers'
  end

  it 'adds a custom rails_helper file' do
    expect_file_contents 'spec/rails_helper.rb', 'config.include FeatureSpecHelpers, type: :feature'
  end

  it 'adds a Code Climate configuration file' do
    expect_file_exists '.codeclimate.yml'
  end

  it 'adds a ESLint configuration file' do
    expect_file_exists '.eslintrc.json'
  end

  it 'adds a Rubocop configuration file' do
    expect_file_exists '.rubocop.yml'
  end

  it 'adds a Reek configuration file' do
    expect_file_exists 'config.reek'
  end
end
